{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport endpoints from \"../../config/endpoints.json\";\nimport useAxios from \"../../hooks/axios\";\nexport default function useWorkshop() {\n  _s();\n  const {\n    customAxios\n  } = useAxios();\n  const [open, setOpen] = useState(false);\n  const [openNotif, setOpenNotif] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [planningDate, setPlanningDate] = useState(null);\n  const [jobs, setJobs] = useState([]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [currentJob, setCurrentJob] = useState({});\n  const [clients, setClients] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleOpenNotif = () => setOpenNotif(true);\n  const handleCloseNotif = () => setOpenNotif(false);\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.includes(\"address.\")) {\n      const addressField = name.split(\".\")[1];\n      setFormData(prevData => ({\n        ...prevData,\n        address: {\n          ...prevData.address,\n          [addressField]: value\n        }\n      }));\n    } else {\n      setFormData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n    if (errors[name]) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [name]: undefined\n      }));\n    }\n  };\n  const addClient = async () => {\n    try {\n      const result = await customAxios({\n        method: \"POST\",\n        url: endpoints.addNewClient,\n        data: formData\n      });\n      console.log(\"Client added successfully:\", result.data);\n      handleClose();\n      handleOpenNotif();\n      fetchClients();\n    } catch (error) {\n      console.error(\"Error adding client:\", error.response || error.message);\n    }\n  };\n  const fetchClients = async () => {\n    setLoading(true);\n    setFetchError(null);\n    try {\n      const response = await customAxios({\n        method: \"GET\",\n        url: endpoints.addNewClient\n      });\n      setClients(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error fetching clients:\", error.response || error.message);\n      setFetchError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchClients();\n  }, []);\n  return {\n    onChange,\n    handleOpen,\n    handleClose,\n    open,\n    addClient,\n    clients,\n    loading,\n    fetchError,\n    columns,\n    handleCloseNotif,\n    handleOpenNotif,\n    openNotif\n  };\n}\n_s(useWorkshop, \"EnZa9GPIZTW5eVaLSWQfBQET/0Q=\", false, function () {\n  return [useAxios];\n});","map":{"version":3,"names":["useState","useEffect","endpoints","useAxios","useWorkshop","_s","customAxios","open","setOpen","openNotif","setOpenNotif","errors","setErrors","planningDate","setPlanningDate","jobs","setJobs","isModalVisible","setIsModalVisible","currentJob","setCurrentJob","clients","setClients","loading","setLoading","fetchError","setFetchError","handleOpen","handleClose","handleOpenNotif","handleCloseNotif","onChange","e","name","value","target","includes","addressField","split","setFormData","prevData","address","prevErrors","undefined","addClient","result","method","url","addNewClient","data","formData","console","log","fetchClients","error","response","message","_error$response","_error$response$data","columns"],"sources":["C:/Users/dell/Desktop/garage-front-end/src/pages/workshop/service.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport endpoints from \"../../config/endpoints.json\";\r\nimport useAxios from \"../../hooks/axios\";\r\nexport default function useWorkshop() {\r\n\r\n  const { customAxios } = useAxios();\r\n  const [open, setOpen] = useState(false);\r\n  const [openNotif, setOpenNotif] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [planningDate, setPlanningDate] = useState(null);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [currentJob, setCurrentJob] = useState({});\r\n  const [clients, setClients] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState(null);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpenNotif = () => setOpenNotif(true);\r\n  const handleCloseNotif = () => setOpenNotif(false);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.includes(\"address.\")) {\r\n      const addressField = name.split(\".\")[1];\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        address: {\r\n          ...prevData.address,\r\n          [addressField]: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n    }\r\n\r\n    if (errors[name]) {\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        [name]: undefined,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const addClient = async () => {\r\n    try {\r\n      const result = await customAxios({\r\n        method: \"POST\",\r\n        url: endpoints.addNewClient,\r\n        data: formData,\r\n      });\r\n      console.log(\"Client added successfully:\", result.data);\r\n      handleClose();\r\n      handleOpenNotif();\r\n      fetchClients();\r\n    } catch (error) {\r\n      console.error(\"Error adding client:\", error.response || error.message);\r\n    }\r\n  };\r\n\r\n  const fetchClients = async () => {\r\n    setLoading(true);\r\n    setFetchError(null);\r\n    try {\r\n      const response = await customAxios({\r\n        method: \"GET\",\r\n        url: endpoints.addNewClient,\r\n      });\r\n      setClients(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching clients:\", error.response || error.message);\r\n      setFetchError(error.response?.data?.message || error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, []);\r\n\r\n  return {\r\n    onChange,\r\n    handleOpen,\r\n    handleClose,\r\n    open,\r\n    addClient,\r\n    clients,\r\n    loading,\r\n    fetchError,\r\n    columns,\r\n    handleCloseNotif,\r\n    handleOpenNotif,\r\n    openNotif,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
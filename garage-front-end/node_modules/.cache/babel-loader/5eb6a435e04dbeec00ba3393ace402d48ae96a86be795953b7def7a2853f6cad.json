{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport useAxios from \"../../hooks/axios\";\nimport { updated } from \"../../store/loading/loadingSlice\";\nimport endpoints from \"../../config/endpoints.json\";\nexport default function useClient() {\n  _s();\n  const {\n    customAxios\n  } = useAxios();\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [errors, setErrors] = useState({});\n  const [formData, setFormData] = useState({\n    \"identityNumber\": \"P30297\",\n    \"firstName\": \"safouane\",\n    \"lastName\": \"guilmi\",\n    \"phoneNumber\": \"08773\",\n    \"email\": \"guilmi@gmail.com\",\n    \"address\": {\n      \"country\": \"morocco\",\n      \"city\": \"Rabat\",\n      \"street\": \"alirfan\",\n      \"buildingNumber\": 4834\n    }\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n    if (errors[name]) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [name]: undefined\n      }));\n    }\n  };\n  const handleUserNatureChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      role: e.target.value\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!validateRequired(formData.username)) {\n      newErrors.username = 'Username is required.';\n    }\n    if (!validateRequired(formData.email)) {\n      newErrors.email = 'Email is required.';\n    }\n    if (!validateRequired(formData.password)) {\n      newErrors.password = 'Password is required.';\n    }\n    if (!validateRequired(formData.identifierNumber)) {\n      newErrors.identifierNumber = 'Identifier number is required.';\n    }\n    if (formData.username && !validateUsername(formData.username)) {\n      newErrors.username = 'Username must be at least 3 characters long and can only contain letters and numbers.';\n    }\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Les mots de passe doivent correspondre.';\n    }\n    if (formData.email && !validateGmail(formData.email)) {\n      newErrors.email = 'Please enter a valid Gmail address.';\n    }\n    if (formData.password && !validatePassword(formData.password)) {\n      newErrors.password = 'Password must be at least 8 characters long and contain an uppercase letter, a lowercase letter, a number, and a special character.';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  // useEffect(() => {\n  //     const fetchPublicAddress = async () => {\n  //         console.log(\"working..\")\n  //         if (window.ethereum) {\n  //             try {\n  //                 const web3 = new Web3(window.ethereum);\n  //                 const accounts = await web3.eth.requestAccounts();\n  //                 console.log(accounts)\n  //                 setFormData(prev=>({...prev,publicAddress:accounts[0]}));\n  //             } catch (error) {\n  //                 console.error(\"User denied MetaMask connection\");\n  //             }\n  //         } else {\n  //             alert(\"MetaMask is not installed!\");\n  //         }\n  //     };\n\n  //     fetchPublicAddress();\n  // }, []);\n  console.log(formData);\n  const onSignUp = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const result = await customAxios({\n        method: \"POST\",\n        url: endpoints.register,\n        data: formData,\n        withCredentials: false\n      });\n      handleClose();\n    } catch (error) {}\n  };\n  return {\n    handleUserNatureChange,\n    onSignUp,\n    onChange,\n    formData,\n    errors,\n    togglePasswordVisibility,\n    showPassword\n  };\n  return {\n    handleOpen,\n    handleClose,\n    open\n  };\n}\n_s(useClient, \"2Cp5hb39PT5iODo3Wc/PWLAWoB4=\", false, function () {\n  return [useAxios, useDispatch];\n});","map":{"version":3,"names":["useState","useEffect","useDispatch","useAxios","updated","endpoints","useClient","_s","customAxios","dispatch","open","setOpen","React","handleOpen","handleClose","errors","setErrors","formData","setFormData","showPassword","setShowPassword","togglePasswordVisibility","prevShowPassword","onChange","e","name","value","target","prevData","prevErrors","undefined","handleUserNatureChange","prev","role","validateForm","newErrors","validateRequired","username","email","password","identifierNumber","validateUsername","confirmPassword","validateGmail","validatePassword","Object","keys","length","console","log","onSignUp","result","method","url","register","data","withCredentials","error"],"sources":["C:/Users/dell/Desktop/garage-front-end/src/pages/client/service.js"],"sourcesContent":["import { useState ,useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useAxios from \"../../hooks/axios\";\r\nimport { updated } from \"../../store/loading/loadingSlice\";\r\nimport endpoints from \"../../config/endpoints.json\"\r\nexport default function useClient(){\r\n\r\n\r\n    const { customAxios } = useAxios();\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [errors, setErrors] = useState({}); \r\n    const [formData, setFormData] = useState({\r\n            \"identityNumber\": \"P30297\",\r\n            \"firstName\": \"safouane\",\r\n            \"lastName\": \"guilmi\",\r\n            \"phoneNumber\": \"08773\",\r\n            \"email\": \"guilmi@gmail.com\",\r\n            \"address\": {\r\n                \"country\": \"morocco\",\r\n                \"city\": \"Rabat\",\r\n                \"street\": \"alirfan\",\r\n                \"buildingNumber\": 4834\r\n            }\r\n        \r\n        \r\n    });\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword((prevShowPassword) => !prevShowPassword);\r\n    };\r\n    const onChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          [name]: value,\r\n        }));\r\n        if (errors[name]) {\r\n          setErrors((prevErrors) => ({\r\n            ...prevErrors,\r\n            [name]: undefined, \r\n          }));\r\n        }\r\n    }\r\n\r\n    const handleUserNatureChange = (e) => {\r\n        setFormData(prev=>({...prev,role:e.target.value}))\r\n    };\r\n   \r\n   \r\n    const validateForm = () => {\r\n        const newErrors = {}; \r\n\r\n        if (!validateRequired(formData.username)) {\r\n            newErrors.username = 'Username is required.';\r\n        }\r\n        if (!validateRequired(formData.email)) {\r\n            newErrors.email = 'Email is required.';\r\n        }\r\n        if (!validateRequired(formData.password)) {\r\n            newErrors.password = 'Password is required.';\r\n        }\r\n        if (!validateRequired(formData.identifierNumber)) {\r\n            newErrors.identifierNumber = 'Identifier number is required.';\r\n        }\r\n        if (formData.username && !validateUsername(formData.username)) {\r\n            newErrors.username = 'Username must be at least 3 characters long and can only contain letters and numbers.';\r\n        }\r\n\r\n        if (formData.password !== formData.confirmPassword) {\r\n            newErrors.confirmPassword='Les mots de passe doivent correspondre.';\r\n        }\r\n        if (formData.email && !validateGmail(formData.email)) {\r\n            newErrors.email = 'Please enter a valid Gmail address.';\r\n        }\r\n\r\n        \r\n        if (formData.password && !validatePassword(formData.password)) {\r\n            newErrors.password = 'Password must be at least 8 characters long and contain an uppercase letter, a lowercase letter, a number, and a special character.';\r\n        }\r\n\r\n        setErrors(newErrors); \r\n        return Object.keys(newErrors).length === 0; \r\n    };\r\n    // useEffect(() => {\r\n    //     const fetchPublicAddress = async () => {\r\n    //         console.log(\"working..\")\r\n    //         if (window.ethereum) {\r\n    //             try {\r\n    //                 const web3 = new Web3(window.ethereum);\r\n    //                 const accounts = await web3.eth.requestAccounts();\r\n    //                 console.log(accounts)\r\n    //                 setFormData(prev=>({...prev,publicAddress:accounts[0]}));\r\n    //             } catch (error) {\r\n    //                 console.error(\"User denied MetaMask connection\");\r\n    //             }\r\n    //         } else {\r\n    //             alert(\"MetaMask is not installed!\");\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchPublicAddress();\r\n    // }, []);\r\n    console.log(formData)\r\n\r\n    const onSignUp = async () => {\r\n        if (!validateForm()) {\r\n            return; \r\n        }\r\n        try {\r\n            const result = await customAxios({\r\n                method: \"POST\",\r\n                url: endpoints.register,\r\n                data: formData,\r\n                withCredentials:false\r\n            });\r\n            handleClose();\r\n        } catch (error) {\r\n           \r\n        }\r\n    };\r\n    return {\r\n        handleUserNatureChange,\r\n        onSignUp,\r\n        onChange,\r\n        formData,\r\n        errors,\r\n        togglePasswordVisibility,\r\n        showPassword\r\n    };\r\n    return {handleOpen,handleClose,open}\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
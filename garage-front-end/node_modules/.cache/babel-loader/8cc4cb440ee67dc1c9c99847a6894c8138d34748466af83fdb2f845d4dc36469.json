{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport endpoints from \"../../config/endpoints.json\";\nimport useAxios from \"../../hooks/axios\";\nexport default function useWorkshop() {\n  _s();\n  const {\n    customAxios\n  } = useAxios();\n  const [open, setOpen] = useState(false);\n  const [openNotif, setOpenNotif] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleOpenNotif = () => setOpenNotif(true);\n  const handleCloseNotif = () => setOpenNotif(false);\n  const [workshop, setWorkshop] = useState([]);\n  const [maintenanceUpdateRequest, setMaintenanceUpdateRequest] = useState({\n    newStatus: \"\",\n    newEndDate: \"\"\n  });\n  const [maintenanceStatus, setMaintenanceStatus] = useState([]);\n  const [selectedMaintenanceStatus, setSelectedMaintenanceStatus] = useState(\"\");\n  const [registrationNumber, setRegistrationNumber] = useState([]);\n  const [selectedRegistrationNumber, setSelectedRegistrationNumber] = useState(\"\");\n  const [formData, setFormData] = useState({\n    planningDate: \"\",\n    jobs: [{\n      startTime: \"\",\n      endTime: \"\",\n      description: \"\",\n      status: \"\",\n      registrationNumber: \"\"\n    }]\n  });\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name.includes(\"jobs\")) {\n      const [_, index, field] = name.split(\".\");\n      setFormData(prevData => {\n        const updatedJobs = [...prevData.jobs];\n        updatedJobs[+index] = {\n          ...updatedJobs[+index],\n          [field]: value\n        };\n        return {\n          ...prevData,\n          jobs: updatedJobs\n        };\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const addJob = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      jobs: [...prevData.jobs, {\n        startTime: \"\",\n        endTime: \"\",\n        description: \"\",\n        status: \"\",\n        registrationNumber: \"\"\n      }]\n    }));\n  };\n  const fetchMaintenanceStatus = async () => {\n    try {\n      const response = await customAxios({\n        method: \"GET\",\n        url: endpoints.maintenanceStatus\n      });\n      setMaintenanceStatus(response.data);\n      console.log(maintenanceStatus);\n    } catch (error) {\n      console.error(\"Error fetching maintenance status:\", error.response || error.message);\n    }\n  };\n  const fetchRegistrationsNumbers = async () => {\n    try {\n      const response = await customAxios({\n        method: \"GET\",\n        url: endpoints.registrationsNumbers\n      });\n      setRegistrationNumber(response.data);\n    } catch (error) {\n      console.error(\"Error fetching  :\", error.response || error.message);\n    }\n  };\n  const addWorkshop = async () => {\n    console.log(formData);\n    try {\n      const response = await customAxios({\n        method: \"POST\",\n        url: endpoints.createWorkshop,\n        data: formData\n      });\n      setFormData(prevData => ({\n        planningDate: \"\",\n        jobs: [{\n          startTime: \"\",\n          endTime: \"\",\n          description: \"\",\n          status: \"\",\n          registrationNumber: \"\"\n        }]\n      }));\n      handleClose();\n      handleOpenNotif();\n    } catch (error) {\n      console.error(\"Error fetching maintenance status:\", error.response || error.message);\n    }\n  };\n  const fetchWorkshop = async () => {\n    setLoading(true);\n    setFetchError(null);\n    try {\n      const response = await customAxios({\n        method: \"GET\",\n        url: endpoints.createWorkshop\n      });\n      setWorkshop(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error fetching :\", error.response || error.message);\n      setFetchError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateStatus = async (idWorkshop, idMaintenance, maintenanceUpdateRequest) => {\n    try {\n      const response = await customAxios({\n        method: \"PUT\",\n        url: `${endpoints}/${idWorkshop}/maintenance/${idMaintenance}`,\n        data: maintenanceUpdateRequest\n      });\n      console.log(\"Update successful\", response);\n    } catch (error) {\n      console.error(\"Error updating maintenance:\", error.response || error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMaintenanceStatus();\n    fetchRegistrationsNumbers();\n    fetchWorkshop();\n  }, []);\n  return {\n    onChange,\n    handleOpen,\n    handleClose,\n    open,\n    loading,\n    fetchError,\n    handleCloseNotif,\n    handleOpenNotif,\n    openNotif,\n    formData,\n    addJob,\n    addWorkshop,\n    selectedMaintenanceStatus,\n    maintenanceStatus,\n    selectedRegistrationNumber,\n    registrationNumber,\n    workshop\n  };\n}\n_s(useWorkshop, \"ATRPym72XGkfiJo1exeR14iJVsM=\", false, function () {\n  return [useAxios];\n});","map":{"version":3,"names":["useState","useEffect","endpoints","useAxios","useWorkshop","_s","customAxios","open","setOpen","openNotif","setOpenNotif","errors","setErrors","loading","setLoading","fetchError","setFetchError","handleOpen","handleClose","handleOpenNotif","handleCloseNotif","workshop","setWorkshop","maintenanceUpdateRequest","setMaintenanceUpdateRequest","newStatus","newEndDate","maintenanceStatus","setMaintenanceStatus","selectedMaintenanceStatus","setSelectedMaintenanceStatus","registrationNumber","setRegistrationNumber","selectedRegistrationNumber","setSelectedRegistrationNumber","formData","setFormData","planningDate","jobs","startTime","endTime","description","status","onChange","event","name","value","target","includes","_","index","field","split","prevData","updatedJobs","addJob","fetchMaintenanceStatus","response","method","url","data","console","log","error","message","fetchRegistrationsNumbers","registrationsNumbers","addWorkshop","createWorkshop","fetchWorkshop","_error$response","_error$response$data","updateStatus","idWorkshop","idMaintenance"],"sources":["C:/Users/dell/Desktop/garage-front-end/src/pages/workshop/service.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport endpoints from \"../../config/endpoints.json\";\r\nimport useAxios from \"../../hooks/axios\";\r\n\r\nexport default function useWorkshop() {\r\n  const { customAxios } = useAxios();\r\n  const [open, setOpen] = useState(false);\r\n  const [openNotif, setOpenNotif] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState(null);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpenNotif = () => setOpenNotif(true);\r\n  const handleCloseNotif = () => setOpenNotif(false);\r\n  const [workshop, setWorkshop] = useState([]);\r\n  const [maintenanceUpdateRequest, setMaintenanceUpdateRequest] = useState({\r\n    newStatus: \"\",\r\n    newEndDate: \"\",\r\n  });\r\n  const [maintenanceStatus, setMaintenanceStatus] = useState([]);\r\n  const [selectedMaintenanceStatus, setSelectedMaintenanceStatus] =\r\n    useState(\"\");\r\n  const [registrationNumber, setRegistrationNumber] = useState([]);\r\n  const [selectedRegistrationNumber, setSelectedRegistrationNumber] =\r\n    useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    planningDate: \"\",\r\n    jobs: [\r\n      {\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        description: \"\",\r\n        status: \"\",\r\n        registrationNumber: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name.includes(\"jobs\")) {\r\n      const [_, index, field] = name.split(\".\");\r\n      setFormData((prevData) => {\r\n        const updatedJobs = [...prevData.jobs];\r\n        updatedJobs[+index] = {\r\n          ...updatedJobs[+index],\r\n          [field]: value,\r\n        };\r\n        return { ...prevData, jobs: updatedJobs };\r\n      });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const addJob = () => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      jobs: [\r\n        ...prevData.jobs,\r\n        {\r\n          startTime: \"\",\r\n          endTime: \"\",\r\n          description: \"\",\r\n          status: \"\",\r\n          registrationNumber: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n  const fetchMaintenanceStatus = async () => {\r\n    try {\r\n      const response = await customAxios({\r\n        method: \"GET\",\r\n        url: endpoints.maintenanceStatus,\r\n      });\r\n      setMaintenanceStatus(response.data);\r\n      console.log(maintenanceStatus);\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error fetching maintenance status:\",\r\n        error.response || error.message\r\n      );\r\n    }\r\n  };\r\n  const fetchRegistrationsNumbers = async () => {\r\n    try {\r\n      const response = await customAxios({\r\n        method: \"GET\",\r\n        url: endpoints.registrationsNumbers,\r\n      });\r\n      setRegistrationNumber(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching  :\", error.response || error.message);\r\n    }\r\n  };\r\n  const addWorkshop = async () => {\r\n    console.log(formData);\r\n    try {\r\n      const response = await customAxios({\r\n        method: \"POST\",\r\n        url: endpoints.createWorkshop,\r\n        data: formData,\r\n      });\r\n\r\n      setFormData((prevData) => ({\r\n        planningDate: \"\",\r\n        jobs: [\r\n          {\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            description: \"\",\r\n            status: \"\",\r\n            registrationNumber: \"\",\r\n          },\r\n        ],\r\n      }));\r\n      handleClose();\r\n      handleOpenNotif();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error fetching maintenance status:\",\r\n        error.response || error.message\r\n      );\r\n    }\r\n  };\r\n  const fetchWorkshop = async () => {\r\n    setLoading(true);\r\n    setFetchError(null);\r\n    try {\r\n      const response = await customAxios({\r\n        method: \"GET\",\r\n        url: endpoints.createWorkshop,\r\n      });\r\n      setWorkshop(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching :\", error.response || error.message);\r\n      setFetchError(error.response?.data?.message || error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const updateStatus = async (\r\n    idWorkshop,\r\n    idMaintenance,\r\n    maintenanceUpdateRequest\r\n  ) => {\r\n    try {\r\n      const response = await customAxios({\r\n        method: \"PUT\",\r\n        url: `${endpoints}/${idWorkshop}/maintenance/${idMaintenance}`,\r\n        data: maintenanceUpdateRequest,\r\n      });\r\n      console.log(\"Update successful\", response);\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error updating maintenance:\",\r\n        error.response || error.message\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchMaintenanceStatus();\r\n    fetchRegistrationsNumbers();\r\n    fetchWorkshop();\r\n  }, []);\r\n\r\n  return {\r\n    onChange,\r\n    handleOpen,\r\n    handleClose,\r\n    open,\r\n    loading,\r\n    fetchError,\r\n    handleCloseNotif,\r\n    handleOpenNotif,\r\n    openNotif,\r\n    formData,\r\n    addJob,\r\n    addWorkshop,\r\n    selectedMaintenanceStatus,\r\n    maintenanceStatus,\r\n    selectedRegistrationNumber,\r\n    registrationNumber,\r\n    workshop,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
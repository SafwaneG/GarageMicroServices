{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport endpoints from \"../../config/endpoints.json\";\nimport useAxios from \"../../hooks/axios\";\nexport default function useWorkshop() {\n  _s();\n  const {\n    customAxios\n  } = useAxios();\n  const [open, setOpen] = useState(false);\n  const [openNotif, setOpenNotif] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [clients, setClients] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleOpenNotif = () => setOpenNotif(true);\n  const handleCloseNotif = () => setOpenNotif(false);\n  const [formData, setFormData] = useState([{\n    planningDate: \"\",\n    jobs: [{\n      startTime: \"\",\n      endTime: \"\",\n      description: \"\",\n      status: \"\",\n      registrationNumber: \"\"\n    }]\n  }]);\n  const onChange = (e, workshopIndex) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"jobs.\")) {\n      const [_, jobIndex, field] = name.split(\".\");\n      setFormData(prevData => {\n        const updatedWorkshops = [...prevData];\n        const updatedJobs = [...updatedWorkshops[workshopIndex].jobs];\n        updatedJobs[jobIndex][field] = value;\n        updatedWorkshops[workshopIndex] = {\n          ...updatedWorkshops[workshopIndex],\n          jobs: updatedJobs\n        };\n        return updatedWorkshops;\n      });\n    } else {\n      setFormData(prevData => {\n        const updatedWorkshops = [...prevData];\n        updatedWorkshops[workshopIndex] = {\n          ...updatedWorkshops[workshopIndex],\n          [name]: value\n        };\n        return updatedWorkshops;\n      });\n    }\n  };\n  const addJob = workshopIndex => {\n    setFormData(prevData => {\n      const updatedWorkshops = [...prevData];\n      updatedWorkshops[workshopIndex] = {\n        ...updatedWorkshops[workshopIndex],\n        jobs: [...updatedWorkshops[workshopIndex].jobs, {\n          startTime: \"\",\n          endTime: \"\",\n          description: \"\",\n          status: \"\",\n          registrationNumber: \"\"\n        }]\n      };\n      return updatedWorkshops;\n    });\n  };\n  const addWorkshop = () => {\n    setFormData(prevData => [...prevData, {\n      planningDate: \"\",\n      jobs: [{\n        startTime: \"\",\n        endTime: \"\",\n        description: \"\",\n        status: \"\",\n        registrationNumber: \"\"\n      }]\n    }]);\n  };\n  return {\n    onChange,\n    handleOpen,\n    handleClose,\n    open,\n    loading,\n    fetchError,\n    handleCloseNotif,\n    handleOpenNotif,\n    openNotif,\n    formData,\n    addJob,\n    addWorkshop\n  };\n}\n_s(useWorkshop, \"W5jIReBRF+atTvKs+HQktI1KoDk=\", false, function () {\n  return [useAxios];\n});","map":{"version":3,"names":["useState","useEffect","endpoints","useAxios","useWorkshop","_s","customAxios","open","setOpen","openNotif","setOpenNotif","errors","setErrors","clients","setClients","loading","setLoading","fetchError","setFetchError","handleOpen","handleClose","handleOpenNotif","handleCloseNotif","formData","setFormData","planningDate","jobs","startTime","endTime","description","status","registrationNumber","onChange","e","workshopIndex","name","value","target","startsWith","_","jobIndex","field","split","prevData","updatedWorkshops","updatedJobs","addJob","addWorkshop"],"sources":["C:/Users/dell/Desktop/garage-front-end/src/pages/workshop/service.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport endpoints from \"../../config/endpoints.json\";\r\nimport useAxios from \"../../hooks/axios\";\r\n\r\nexport default function useWorkshop() {\r\n    const { customAxios } = useAxios();\r\n    const [open, setOpen] = useState(false);\r\n    const [openNotif, setOpenNotif] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    \r\n    const [clients, setClients] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [fetchError, setFetchError] = useState(null);\r\n  \r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const handleOpenNotif = () => setOpenNotif(true);\r\n    const handleCloseNotif = () => setOpenNotif(false);\r\n  const [formData, setFormData] = useState([\r\n    {\r\n      planningDate: \"\",\r\n      jobs: [\r\n        {\r\n          startTime: \"\",\r\n          endTime: \"\",\r\n          description: \"\",\r\n          status: \"\",\r\n          registrationNumber: \"\",\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const onChange = (e, workshopIndex) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.startsWith(\"jobs.\")) {\r\n      const [_, jobIndex, field] = name.split(\".\");\r\n      setFormData((prevData) => {\r\n        const updatedWorkshops = [...prevData];\r\n        const updatedJobs = [...updatedWorkshops[workshopIndex].jobs];\r\n        updatedJobs[jobIndex][field] = value;\r\n        updatedWorkshops[workshopIndex] = {\r\n          ...updatedWorkshops[workshopIndex],\r\n          jobs: updatedJobs,\r\n        };\r\n        return updatedWorkshops;\r\n      });\r\n    } else {\r\n      setFormData((prevData) => {\r\n        const updatedWorkshops = [...prevData];\r\n        updatedWorkshops[workshopIndex] = {\r\n          ...updatedWorkshops[workshopIndex],\r\n          [name]: value,\r\n        };\r\n        return updatedWorkshops;\r\n      });\r\n    }\r\n  };\r\n\r\n  const addJob = (workshopIndex) => {\r\n    setFormData((prevData) => {\r\n      const updatedWorkshops = [...prevData];\r\n      updatedWorkshops[workshopIndex] = {\r\n        ...updatedWorkshops[workshopIndex],\r\n        jobs: [\r\n          ...updatedWorkshops[workshopIndex].jobs,\r\n          {\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            description: \"\",\r\n            status: \"\",\r\n            registrationNumber: \"\",\r\n          },\r\n        ],\r\n      };\r\n      return updatedWorkshops;\r\n    });\r\n  };\r\n\r\n  const addWorkshop = () => {\r\n    setFormData((prevData) => [\r\n      ...prevData,\r\n      {\r\n        planningDate: \"\",\r\n        jobs: [\r\n          {\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            description: \"\",\r\n            status: \"\",\r\n            registrationNumber: \"\",\r\n          },\r\n        ],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    handleOpen,\r\n    handleClose,\r\n    open,\r\n    loading,\r\n    fetchError,\r\n    handleCloseNotif,\r\n    handleOpenNotif,\r\n    openNotif,\r\n    formData,\r\n    addJob,\r\n    addWorkshop,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\garage-front-end\\\\src\\\\components\\\\form.js\";\nimport { Box, TextField, Typography, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DynamicForm({\n  config,\n  AddClient,\n  onChange\n}) {\n  const renderFields = fields => {\n    if (!Array.isArray(fields)) {\n      console.error(\"Invalid fields provided to renderFields:\", fields);\n      return null;\n    }\n    const renderFields = fields => {\n      return fields.map(field => {\n        if (field.type === \"group\") {\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: field.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                gap: 2,\n                flexWrap: \"wrap\"\n              },\n              children: renderFields(field.fields)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 13\n            }, this)]\n          }, field.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          id: field.id,\n          label: field.label,\n          type: field.type,\n          required: field.required,\n          onChange: e => onChange(field.id, field.type === \"number\" ? +e.target.value : e.target.value)\n        }, field.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mx: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        sx: {\n          mb: 3\n        },\n        children: \"Dynamic Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        children: [renderFields(config), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3\n          },\n          onClick: e => {\n            e.preventDefault();\n            AddClient();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  };\n}\n_c = DynamicForm;\nvar _c;\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"names":["Box","TextField","Typography","Button","jsxDEV","_jsxDEV","DynamicForm","config","AddClient","onChange","renderFields","fields","Array","isArray","console","error","map","field","type","sx","mt","children","variant","label","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","flexWrap","id","margin","fullWidth","required","e","target","value","mx","component","mb","noValidate","onClick","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/garage-front-end/src/components/form.js"],"sourcesContent":["import { Box, TextField, Typography, Button } from \"@mui/material\";\r\n\r\nexport default function DynamicForm({ config, AddClient, onChange }) {\r\n  const renderFields = (fields) => {\r\n    if (!Array.isArray(fields)) {\r\n      console.error(\"Invalid fields provided to renderFields:\", fields);\r\n      return null;\r\n    }\r\n  const renderFields = (fields) => {\r\n    return fields.map((field) => {\r\n      if (field.type === \"group\") {\r\n        return (\r\n          <Box key={field.id} sx={{ mt: 2 }}>\r\n            <Typography variant=\"h6\">{field.label}</Typography>\r\n            <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\" }}>\r\n              {renderFields(field.fields)}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <TextField\r\n          key={field.id}\r\n          margin=\"normal\"\r\n          fullWidth\r\n          id={field.id}\r\n          label={field.label}\r\n          type={field.type}\r\n          required={field.required}\r\n          onChange={(e) =>\r\n            onChange(\r\n              field.id,\r\n              field.type === \"number\" ? +e.target.value : e.target.value\r\n            )\r\n          }\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mx: 4 }}>\r\n      <Typography component=\"h1\" variant=\"h5\" sx={{ mb: 3 }}>\r\n        Dynamic Form\r\n      </Typography>\r\n      <form noValidate>\r\n        {renderFields(config)}\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{ mt: 3 }}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            AddClient();\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n}}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
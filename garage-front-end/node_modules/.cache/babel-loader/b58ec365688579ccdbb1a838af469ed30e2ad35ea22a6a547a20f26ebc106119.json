{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport endpoints from \"../../config/endpoints.json\";\nimport useAxios from \"../../hooks/axios\";\nexport default function useWorkshop() {\n  _s();\n  const {\n    customAxios\n  } = useAxios();\n  const [open, setOpen] = useState(false);\n  const [openNotif, setOpenNotif] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleOpenNotif = () => setOpenNotif(true);\n  const handleCloseNotif = () => setOpenNotif(false);\n  const [MaintenanceStatus, setMaintenanceStatus] = useState([]);\n  const [selectedMaintenanceStatus, setSelectedVehicleCondition] = useState('');\n  const [formData, setFormData] = useState({\n    planningDate: \"\",\n    jobs: [{\n      startTime: \"\",\n      endTime: \"\",\n      description: \"\",\n      status: \"\",\n      registrationNumber: \"\"\n    }]\n  });\n  const onChange = (e, workshopIndex) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"jobs.\")) {\n      const [_, jobIndex, field] = name.split(\".\");\n      setFormData(prevData => {\n        const updatedJobs = [...prevData.jobs]; // Copy the jobs array\n        updatedJobs[jobIndex][field] = value; // Update the specific job\n        return {\n          ...prevData,\n          jobs: updatedJobs\n        }; // Update the formData with new jobs array\n      });\n    } else {\n      // Update other fields in formData (like planningDate)\n      setFormData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const addJob = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      jobs: [...prevData.jobs, {\n        startTime: \"\",\n        endTime: \"\",\n        description: \"\",\n        status: \"\",\n        registrationNumber: \"\"\n      }]\n    }));\n  };\n  const addWorkshop = () => {\n    setFormData(prevData => ({\n      planningDate: \"\",\n      jobs: [{\n        startTime: \"\",\n        endTime: \"\",\n        description: \"\",\n        status: \"\",\n        registrationNumber: \"\"\n      }]\n    }));\n  };\n  return {\n    onChange,\n    handleOpen,\n    handleClose,\n    open,\n    loading,\n    fetchError,\n    handleCloseNotif,\n    handleOpenNotif,\n    openNotif,\n    formData,\n    addJob,\n    addWorkshop\n  };\n}\n_s(useWorkshop, \"RB9aDI0c//hi6tbqTROVmWSe+uQ=\", false, function () {\n  return [useAxios];\n});","map":{"version":3,"names":["useState","useEffect","endpoints","useAxios","useWorkshop","_s","customAxios","open","setOpen","openNotif","setOpenNotif","errors","setErrors","loading","setLoading","fetchError","setFetchError","handleOpen","handleClose","handleOpenNotif","handleCloseNotif","MaintenanceStatus","setMaintenanceStatus","selectedMaintenanceStatus","setSelectedVehicleCondition","formData","setFormData","planningDate","jobs","startTime","endTime","description","status","registrationNumber","onChange","e","workshopIndex","name","value","target","startsWith","_","jobIndex","field","split","prevData","updatedJobs","addJob","addWorkshop"],"sources":["C:/Users/dell/Desktop/garage-front-end/src/pages/workshop/service.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport endpoints from \"../../config/endpoints.json\";\r\nimport useAxios from \"../../hooks/axios\";\r\n\r\nexport default function useWorkshop() {\r\n  const { customAxios } = useAxios();\r\n  const [open, setOpen] = useState(false);\r\n  const [openNotif, setOpenNotif] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState(null);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpenNotif = () => setOpenNotif(true);\r\n  const handleCloseNotif = () => setOpenNotif(false);\r\n  \r\n  const [MaintenanceStatus, setMaintenanceStatus] = useState([]);\r\n  const [selectedMaintenanceStatus, setSelectedVehicleCondition] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    planningDate: \"\",\r\n    jobs: [\r\n      {\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        description: \"\",\r\n        status: \"\",\r\n        registrationNumber: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const onChange = (e, workshopIndex) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.startsWith(\"jobs.\")) {\r\n      const [_, jobIndex, field] = name.split(\".\");\r\n      setFormData((prevData) => {\r\n        const updatedJobs = [...prevData.jobs]; // Copy the jobs array\r\n        updatedJobs[jobIndex][field] = value; // Update the specific job\r\n        return { ...prevData, jobs: updatedJobs }; // Update the formData with new jobs array\r\n      });\r\n    } else {\r\n      // Update other fields in formData (like planningDate)\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const addJob = () => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      jobs: [\r\n        ...prevData.jobs,\r\n        {\r\n          startTime: \"\",\r\n          endTime: \"\",\r\n          description: \"\",\r\n          status: \"\",\r\n          registrationNumber: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const addWorkshop = () => {\r\n    setFormData((prevData) => ({\r\n      planningDate: \"\",\r\n      jobs: [\r\n        {\r\n          startTime: \"\",\r\n          endTime: \"\",\r\n          description: \"\",\r\n          status: \"\",\r\n          registrationNumber: \"\",\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n  return {\r\n    onChange,\r\n    handleOpen,\r\n    handleClose,\r\n    open,\r\n    loading,\r\n    fetchError,\r\n    handleCloseNotif,\r\n    handleOpenNotif,\r\n    openNotif,\r\n    formData,\r\n    addJob,\r\n    addWorkshop,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}